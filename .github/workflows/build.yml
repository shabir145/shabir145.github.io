name: Build for Windows and Linux

on:
  push:
    branches:
      - main  # Trigger the action when changes are pushed to the 'main' branch
  pull_request:
    branches:
      - main  # Also trigger when a PR is created against the 'main' branch

jobs:
  build-linux:
    runs-on: ubuntu-latest  # Use an Ubuntu runner for the Linux build

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build for Linux
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu  # Compile for Linux

      - name: Set execute permission for Linux binary
        run: chmod +x target/x86_64-unknown-linux-gnu/release/organize

      - name: Create TAR.GZ archive of Linux binary
        run: |
          tar -czvf organize_linux_x86_64.tar.gz -C target/x86_64-unknown-linux-gnu/release organize

      - name: Upload Linux binary as an artifact
        uses: actions/upload-artifact@v3  # Updated to v3
        with:
          name: organize-linux-binary
          path: organize_linux_x86_64.tar.gz

  build-windows:
    runs-on: windows-latest  # Use a Windows runner for the Windows build

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Add Windows target
        run: rustup target add x86_64-pc-windows-gnu

      - name: Build for Windows
        run: cargo build --release --target x86_64-pc-windows-gnu

      - name: Create ZIP archive of Windows binary
        run: Compress-Archive -Path target\x86_64-pc-windows-gnu\release\organize.exe -DestinationPath organize_windows_x86_64.zip

      - name: Upload Windows binary as an artifact
        uses: actions/upload-artifact@v3  # Updated to v3
        with:
          name: organize-windows-binary
          path: organize_windows_x86_64.zip

  create-release:
    runs-on: ubuntu-latest  # Use Ubuntu runner to create the GitHub release
    needs: [build-linux, build-windows]  # Ensure the build jobs are successful before this runs

    steps:
      - name: Download Linux binary artifact
        uses: actions/download-artifact@v3  # Updated to v3
        with:
          name: organize-linux-binary

      - name: Download Windows binary artifact
        uses: actions/download-artifact@v3  # Updated to v3
        with:
          name: organize-windows-binary

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            organize_windows_x86_64.zip
            organize_linux_x86_64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
